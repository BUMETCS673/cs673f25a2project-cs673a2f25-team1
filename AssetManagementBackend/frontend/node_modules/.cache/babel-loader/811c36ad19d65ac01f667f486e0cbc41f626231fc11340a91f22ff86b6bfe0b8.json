{"ast":null,"code":"var _jsxFileName = \"D:\\\\BU\\\\Fall2025\\\\Software Engineering\\\\Term Project\\\\SE\\\\cs673f25a2project-cs673a2f25-team1\\\\AssetManagementAnomalyDetection\\\\frontend\\\\src\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // Check for existing token on app load\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      // You could fetch user data here if needed\n    }\n  }, []);\n  const login = (newToken, userData) => {\n    setToken(newToken);\n    setUser(userData);\n    localStorage.setItem('token', newToken);\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"cANLe8RtnwDE5y1hInrXoZDdgy8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","storedToken","localStorage","getItem","login","newToken","userData","setItem","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BU/Fall2025/Software Engineering/Term Project/SE/cs673f25a2project-cs673a2f25-team1/AssetManagementAnomalyDetection/frontend/src/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (token: string, user: User) => void;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Check for existing token on app load\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      // You could fetch user data here if needed\r\n    }\r\n  }, []);\r\n\r\n  const login = (newToken: string, userData: User) => {\r\n    setToken(newToken);\r\n    setUser(userData);\r\n    localStorage.setItem('token', newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!token,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACC,WAAW,CAAC;MACrB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGA,CAACC,QAAgB,EAAEC,QAAc,KAAK;IAClDN,QAAQ,CAACK,QAAQ,CAAC;IAClBP,OAAO,CAACQ,QAAQ,CAAC;IACjBJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;EACzC,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBR,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZb,IAAI;IACJE,KAAK;IACLK,KAAK;IACLI,MAAM;IACNG,eAAe,EAAE,CAAC,CAACZ;EACrB,CAAC;EAED,oBAAOZ,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACpB,GAAA,CAlCWF,YAAyC;AAAAuB,EAAA,GAAzCvB,YAAyC;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}